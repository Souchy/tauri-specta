/* eslint-disable */
/* DO NOT EDIT. AUTO-GENERATED BY SPECTA */

import {
  invoke as TAURI_INVOKE,
  Channel as TAURI_CHANNEL,
} from "@tauri-apps/api/core";
import { Result } from '../globals';
import { Custom, DemoEvent, EmptyEvent, Id, MyError, MyError2, MyStruct } from '../types';

export namespace library_service {
	export async function getLibrary() : Promise<void> {
	    await TAURI_INVOKE("get_library");
	}
	export async function helloApp() : Promise<Result<string, string>> {
	    try {
	        return { status: "ok", data: await TAURI_INVOKE("hello_app") };
	    } catch (e) {
	        if(e instanceof Error) throw e;
	        else return { status: "error", error: e  as any };
	    }
	}
	/**
	 * Execute a command against the database
	 */
	export async function addDb(db: string) : Promise<Result<string, string>> {
	    try {
	        return { status: "ok", data: await TAURI_INVOKE("add_db", { db }) };
	    } catch (e) {
	        if(e instanceof Error) throw e;
	        else return { status: "error", error: e  as any };
	    }
	}
	/**
	 * Execute a command against the database
	 */
	export async function getDb(db: string) : Promise<Result<string, string>> {
	    try {
	        return { status: "ok", data: await TAURI_INVOKE("get_db", { db }) };
	    } catch (e) {
	        if(e instanceof Error) throw e;
	        else return { status: "error", error: e  as any };
	    }
	}
}
